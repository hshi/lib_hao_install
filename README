These are the scripts for easy installation of the entire lib_hao:

1. Download lib_hao_install
   Open a terminal, run: "git clone https://github.com/hshi/lib_hao_install.git" 


2. Download all the lib_hao libraries and related scripts 
   Go to lib_hao_install, run: "python libhao_download.py"


3. Install the lib_hao libraries
   Stay in the lib_hao_install, run: "python libhao_install.py type"
   "type" can be: mpi, serial, storm, hu, ...
   You can build your own "type" in cmake.py for different platform, read the "Build your own type" below.
   The libraries are installed in ~/lib/lib_hao/type by default. You can change it by reset "install_dirc_name" in libhao_install.py. After that, you need to set "LIBHAO" to the directory in cmake_code_script/cmake.py.
   note: cmake_code_script will be copied to install_dirc_name (~/lib default).

4. Test the lib hao
   1) If you are in a cluster, first require an interactive job, e.g.
      "qsub -X -I -l walltime=1:00:00 -l nodes=1:wind:ppn=16"

   2) Go to the directory where you install the libraries, default in: ~/lib/lib_hao/type
   
   3) "cd test"
 
   4) Use the runtest.py script in cmake_code_script to test 
     "python Path/to/lib_hao_install/cmake_code_script/runtest.py type"   "type" can be found in runtest.py.

5) (Optional!!!!! Skip if you want to keep the source code.) Clean the lib_hao_install directory
   Go to lib_hao_install, run: "python cmake_code_script/clean.py"


Dependence:
   1) fftw_lib_hao 
       need fftw library, and FFTW=/PATH/TO/FFTW, e.g. export FFTW='/opt/fftw'

   2) tensor_lib_hao 
       Need mkl library, and MKL=/PATH/TO/MKL, e.g. export MKL='/opt/intel/mkl' "
       Or need acml library, and ACML=/PATH/TO/ACML, e.g. export ACML='/usr/local/acml-5.1.0/' 
       Or need blas lapack library, use find FindLAPACK.cmake in cmake system.
       Need magma library(optional), and MAGMA=/PATH/TO/MAGMA, e.g. export MAGMA='/usr/local/intel64/nehalem/magma-1.3.0'
       Note: magma need cuda.

   3) mpi_lib_hao
       Need mpi.

   4) random_lib_hao
       Need sprng library, and SPRNG=/PATH/TO/SPRNG, e.g. export SPRNG='/home/username/sprng/sprng2.0'
       Need gmp library, and GMP=/PATH/TO/GMP, e.g. export GMP='/usr/local/gmp-4.3.2'.


Build your own type:
   You can write your own type in cmake_code_script/cmake.py, here are a few tips.
   1. set the compiler, e.g. -DCMAKE_CXX_COMPILER=mpic++
   2. set the compiler flag, e.g. -DCMAKE_CXX_FLAGS='-Wall -O3'
   3. if you want to install the mpi version, use: -DCOMPILER_EXTRA_DEF:STRING='-DMPI_HAO'
   4. set the custom cmake module path, it is automatically downloaded in ~/lib/Modules, if you change the module path to '/MY/MODULE/PATH', use: -DMODULE_EXTRA_PATH:STRING='/MY/MODULE/PATH'
   5. set path for your dependent libraries, e.g. os.environ['SPRNG'] = "~/sprng2.0", os.environ['FFTW'] = "/opt/fftw", check "Dependence" for details.

This project is licensed under the terms of the MIT license, enjoy coding.
